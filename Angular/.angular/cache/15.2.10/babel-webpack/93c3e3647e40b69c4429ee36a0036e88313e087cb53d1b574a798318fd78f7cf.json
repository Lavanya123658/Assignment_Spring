{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../jwt.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction DisplayleaveComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function DisplayleaveComponent_tr_13_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const leave_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.edit(leave_r4));\n    });\n    i0.ɵɵtext(7, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\")(9, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function DisplayleaveComponent_tr_13_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const leave_r4 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.delete(leave_r4));\n    });\n    i0.ɵɵtext(10, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const leave_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(leave_r4.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(leave_r4.maxLeaves);\n  }\n}\nexport class DisplayleaveComponent {\n  constructor(service, fb) {\n    this.service = service;\n    this.fb = fb;\n    this.leaves = null;\n    this.leaveToUpdate = {\n      id: null,\n      name: \"\",\n      maxLeaves: null\n    };\n    this.getLeaveDetails();\n  }\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      name: ['', [Validators.required]],\n      maxLeaves: ['', Validators.required]\n    });\n  }\n  getLeaveDetails() {\n    this.service.getLeaves().subscribe(resp => {\n      console.log(resp);\n      this.leaves = resp;\n      console.log(\"this is\", this.leaves.id);\n    }, err => {\n      console.log(err);\n    });\n  }\n  delete(leave) {\n    this.service.deleteLeaves(leave.id).subscribe(resp => {\n      console.log(resp);\n      this.getLeaveDetails();\n    }, err => console.log(err));\n  }\n  static #_ = this.ɵfac = function DisplayleaveComponent_Factory(t) {\n    return new (t || DisplayleaveComponent)(i0.ɵɵdirectiveInject(i1.JwtService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DisplayleaveComponent,\n    selectors: [[\"app-displayleave\"]],\n    decls: 42,\n    vars: 6,\n    consts: [[1, \"mt-5\"], [1, \"table\", \"table-bordered\"], [1, \"thead\"], [1, \"tbody\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"id\"], [\"type\", \"number\", \"disabled\", \"\", \"name\", \"id\", \"id\", \"id\", \"placeholder\", \"Leave Type ID\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"name\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"\"], [\"for\", \"maxLeaves\"], [\"type\", \"number\", \"name\", \"maxLeaves\", \"id\", \"maxLeaves\", \"formControlName\", \"maxLeaves\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"maxLeaves\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-secondary\", \"mt-3\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-dark\", 3, \"click\"]],\n    template: function DisplayleaveComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\", 2)(3, \"tr\")(4, \"th\");\n        i0.ɵɵtext(5, \"Leave Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"th\");\n        i0.ɵɵtext(7, \"Maximum Leaves\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\");\n        i0.ɵɵtext(9, \"Edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"Delete\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"tbody\", 3);\n        i0.ɵɵtemplate(13, DisplayleaveComponent_tr_13_Template, 11, 2, \"tr\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 5)(15, \"div\", 6)(16, \"div\", 7)(17, \"div\", 8)(18, \"h5\", 9);\n        i0.ɵɵtext(19, \"Update or Edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 10)(21, \"span\", 11);\n        i0.ɵɵtext(22, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(23, \"div\", 12)(24, \"form\", 13);\n        i0.ɵɵlistener(\"ngSubmit\", function DisplayleaveComponent_Template_form_ngSubmit_24_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(25, \"div\", 14)(26, \"label\", 15);\n        i0.ɵɵtext(27, \"Id :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"input\", 16, 17);\n        i0.ɵɵlistener(\"ngModelChange\", function DisplayleaveComponent_Template_input_ngModelChange_28_listener($event) {\n          return ctx.leaveToUpdate.id = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 14)(31, \"label\", 18);\n        i0.ɵɵtext(32, \"Leave Type Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"input\", 19, 20);\n        i0.ɵɵlistener(\"ngModelChange\", function DisplayleaveComponent_Template_input_ngModelChange_33_listener($event) {\n          return ctx.leaveToUpdate.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 14)(36, \"label\", 21);\n        i0.ɵɵtext(37, \"Maximum Leaves\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"input\", 22, 23);\n        i0.ɵɵlistener(\"ngModelChange\", function DisplayleaveComponent_Template_input_ngModelChange_38_listener($event) {\n          return ctx.leaveToUpdate.maxLeaves = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"button\", 24);\n        i0.ɵɵtext(41, \"Update\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.leaves);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.leaveToUpdate.id);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.leaveToUpdate.name);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.leaveToUpdate.maxLeaves);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n      }\n    },\n    dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i2.NgModel],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","DisplayleaveComponent","constructor","service","fb","id","name","maxLeaves","getLeaveDetails","ngOnInit","registerForm","group","required","getLeaves","subscribe","resp","console","log","leaves","err","delete","leave","deleteLeaves","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\gurij\\OneDrive\\Desktop\\Angular\\frontEnd\\src\\app\\displayleave\\displayleave.component.ts","C:\\Users\\gurij\\OneDrive\\Desktop\\Angular\\frontEnd\\src\\app\\displayleave\\displayleave.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { JwtService } from '../jwt.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-displayleave',\n  templateUrl: './displayleave.component.html',\n  styleUrls: ['./displayleave.component.scss']\n})\nexport class DisplayleaveComponent implements OnInit{\n  registerForm!: FormGroup ;\n\n  leaves:any = null;\n  constructor(private service:JwtService,private fb: FormBuilder){\n    this.getLeaveDetails();\n  }\n\n  ngOnInit(): void {\n    this.registerForm=this.fb.group({\n      name:['',[Validators.required]],\n      maxLeaves:['',Validators.required]\n    })\n  }\n  leaveToUpdate={\n    id:null,\n    name:\"\",\n    maxLeaves:null\n  }\n\n\n  getLeaveDetails(){\n    this.service.getLeaves().subscribe(\n      (resp)=>{\n        console.log(resp);\n        this.leaves=resp;\n        console.log(\"this is\",this.leaves.id);\n      },\n      (err)=>{\n        console.log(err);\n      }\n    )\n  }\n\n  delete(leave:any){\n    this.service.deleteLeaves(leave.id).subscribe(\n      (resp)=>{\n        console.log(resp);\n        this.getLeaveDetails();\n      },\n      (err)=>console.log(err)\n    );\n  }\n\n}\n\n","<div class=\"mt-5\">\n  <table class=\"table table-bordered\">\n    <thead class=\"thead\">\n      <tr>\n        <!-- <th>ID</th> -->\n        <th>Leave Type</th>\n        <th>Maximum Leaves</th>\n        <th>Edit</th>\n        <th>Delete</th>\n      </tr>\n    </thead>\n    <tbody class=\"tbody\">\n        <tr *ngFor=\"let leave of leaves\">\n          <!-- <td> {{leave.id}}</td> -->\n          <td>{{leave.name}}</td>\n          <td>{{leave.maxLeaves}}</td>\n          <td><button type=\"button\" class=\"btn btn-dark\" (click)=\"edit(leave)\">Edit</button></td>\n          <td><button type=\"button\" class=\"btn btn-dark\" (click)=\"delete(leave)\">Delete</button></td>\n        </tr>\n    </tbody>\n  </table>\n</div>\n\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n  aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Update or Edit</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"registerForm\" (ngSubmit)=submitForm()>\n          <div class=\"form-group\">\n            <label for=\"id\">Id :</label>\n            <input type=\"number\" disabled #id [(ngModel)]=\"leaveToUpdate.id\" name=\"id\" id=\"id\"\n              class=\"form-control\" placeholder=\"Leave Type ID\">\n          </div>\n          <div class=\"form-group\">\n              <label for=\"name\">Leave Type Name</label>\n              <input type=\"text\" #name [(ngModel)]=\"leaveToUpdate.name\" name=\"name\" class=\"form-control\" id=\"name\" formControlName=\"name\" />\n          </div>\n\n          <div class=\"form-group\">\n              <label for=\"maxLeaves\">Maximum Leaves</label>\n              <input type=\"number\" #maxLeaves [(ngModel)]=\"leaveToUpdate.maxLeaves\" name=\"maxLeaves\" class=\"form-control\" id=\"maxLeaves\" formControlName=\"maxLeaves\" />\n          </div>\n\n          <button type=\"submit\" class=\"btn btn-outline-secondary mt-3\" [disabled]=\"registerForm.invalid\">Update</button>\n      </form>\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}