{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../employee/employee.component\";\nimport * as i4 from \"../manager/manager.component\";\nfunction RegistrationParentComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-employee\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationParentComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-manager\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegistrationParentComponent {\n  constructor() {\n    this.registrationType = 'employee';\n  }\n  static #_ = this.ɵfac = function RegistrationParentComponent_Factory(t) {\n    return new (t || RegistrationParentComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrationParentComponent,\n    selectors: [[\"app-registration-parent\"]],\n    decls: 14,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"row\", \"justify-content-end\"], [1, \"col-auto\"], [1, \"form-check\", \"form-check-inline\"], [\"type\", \"radio\", \"value\", \"employee\", \"id\", \"employeeRadio\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"employeeRadio\", 1, \"form-check-label\"], [\"type\", \"radio\", \"value\", \"manager\", \"id\", \"managerRadio\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"managerRadio\", 1, \"form-check-label\"], [4, \"ngIf\"]],\n    template: function RegistrationParentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RegistrationParentComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.registrationType = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"label\", 5);\n        i0.ɵɵtext(6, \"Employee\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"div\", 3)(9, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function RegistrationParentComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.registrationType = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"label\", 7);\n        i0.ɵɵtext(11, \"Manager\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(12, RegistrationParentComponent_div_12_Template, 2, 0, \"div\", 8);\n        i0.ɵɵtemplate(13, RegistrationParentComponent_div_13_Template, 2, 0, \"div\", 8);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.registrationType);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.registrationType);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.registrationType === \"employee\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.registrationType === \"manager\");\n      }\n    },\n    dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgModel, i3.EmployeeComponent, i4.ManagerComponent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;IA+BAA,2BAA6C;IAC3CA,+BAA6B;IAC/BA,iBAAM;;;;;IAENA,2BAA4C;IAC1CA,8BAA2B;IAC7BA,iBAAM;;;AC9BN,OAAM,MAAOC,2BAA2B;EALxCC;IAME,qBAAgB,GAAW,UAAU;;EACtC;qBAFYD,2BAA2B;EAAA;EAAA;UAA3BA,2BAA2B;IAAAE;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDOxCP,8BAAuB;QAI8BA;UAAA;QAAA,EAA8B;QAA3EA,iBAAgH;QAChHA,gCAAoD;QAAAA,wBAAQ;QAAAA,iBAAQ;QAGxEA,8BAAsB;QAE2BA;UAAA;QAAA,EAA8B;QAA3EA,iBAA8G;QAC9GA,iCAAmD;QAAAA,wBAAO;QAAAA,iBAAQ;QAM1EA,8EAEM;QAENA,8EAEM;;;QAnB+CA,eAA8B;QAA9BA,8CAA8B;QAM9BA,eAA8B;QAA9BA,8CAA8B;QAO7EA,eAAqC;QAArCA,0DAAqC;QAIrCA,eAAoC;QAApCA,yDAAoC","names":["i0","RegistrationParentComponent","constructor","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\gurij\\OneDrive\\Desktop\\SpringAssignment\\Angular\\src\\app\\registration-parent\\registration-parent.component.html","C:\\Users\\gurij\\OneDrive\\Desktop\\SpringAssignment\\Angular\\src\\app\\registration-parent\\registration-parent.component.ts"],"sourcesContent":["<!-- <p>registration-parent works!</p>\n<div>\n  <label><input type=\"radio\" [(ngModel)]=\"registrationType\" value=\"employee\"> Employee</label>\n  <label><input type=\"radio\" [(ngModel)]=\"registrationType\" value=\"manager\"> Manager</label>\n</div>\n\n<div *ngIf=\"registrationType === 'employee'\">\n  <app-emp-register></app-emp-register>\n</div>\n\n<div *ngIf=\"registrationType === 'manager'\">\n  <app-emp-register></app-emp-register>\n</div> -->\n\n<div class=\"container\">\n  <div class=\"row justify-content-end\">\n    <div class=\"col-auto\">\n      <div class=\"form-check form-check-inline\">\n        <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"registrationType\" value=\"employee\" id=\"employeeRadio\">\n        <label class=\"form-check-label\" for=\"employeeRadio\">Employee</label>\n      </div>\n    </div>\n    <div class=\"col-auto\">\n      <div class=\"form-check form-check-inline\">\n        <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"registrationType\" value=\"manager\" id=\"managerRadio\">\n        <label class=\"form-check-label\" for=\"managerRadio\">Manager</label>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"registrationType === 'employee'\">\n  <app-employee></app-employee>\n</div>\n\n<div *ngIf=\"registrationType === 'manager'\">\n  <app-manager></app-manager>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-registration-parent',\n  templateUrl: './registration-parent.component.html',\n  styleUrls: ['./registration-parent.component.scss']\n})\nexport class RegistrationParentComponent {\n  registrationType: string = 'employee';\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}